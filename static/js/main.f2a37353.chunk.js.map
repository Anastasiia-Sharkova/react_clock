{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","date","Date","toLocaleTimeString","this","setInterval","setState","console","log","prevProps","props","name","clearInterval","className","React","Component","App","clockName","Math","floor","random","isClockVisible","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"iPAWaA,EAAb,4MACEC,aADF,IAGEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAJrB,uDAOE,WAAqB,IAAD,OAClBC,KAAKL,QAAUM,aAAY,WACzB,EAAKC,SAAS,CAAEL,MAAM,IAAIC,MAAOC,uBAGjCI,QAAQC,IAAI,EAAKR,MAAMC,QACtB,OAbP,gCAgBE,SAAmBQ,GACbL,KAAKM,MAAMC,OAASF,EAAUE,MAEhCJ,QAAQC,IAAR,qCAA0CC,EAAUE,KAApD,eAA+DP,KAAKM,MAAMC,SAnBhF,kCAuBE,WACMP,KAAKL,SACPa,cAAcR,KAAKL,WAzBzB,oBA6BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,mBAAG,UAAQ,OAAOA,UAAU,eAA5B,2BAGA,qBAAKA,UAAU,eAAf,SACGT,KAAKJ,MAAMC,cApCtB,GAA2Ba,IAAMC,WCFpBC,EAAb,4MACEhB,MAAe,CACbiB,UAAWC,KAAKC,MAAsB,GAAhBD,KAAKE,UAC3BC,gBAAgB,GAHpB,4CAME,WAAU,IAAD,OACP,EAGIjB,KAAKJ,MAFPiB,EADF,EACEA,UACAI,EAFF,EAEEA,eAGF,OACE,sBAAKR,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,sCAA6CI,KAC5CI,EACC,cAAC,EAAD,CACEV,KAAMM,IAGR,sBAAKJ,UAAU,iBAAf,UACE,oBAAIA,UAAU,mCAAd,0DAGA,8BACE,wBACES,KAAK,SACLT,UAAU,+BACVU,QAAS,WACP,EAAKjB,SACH,CAAEe,gBAAgB,KALxB,6BAeN,sBAAKR,UAAU,iBAAf,UACE,wBACES,KAAK,SACLT,UAAU,cACVU,QAAS,WACP,EAAKjB,SACH,CAAEe,gBAAgB,KAGtBG,UAAWH,EARb,wBAaA,wBACEC,KAAK,SACLT,UAAU,cACVU,QAAS,WACP,EAAKjB,SACH,CAAEW,UAAWC,KAAKC,MAAsB,GAAhBD,KAAKE,aALnC,8CAtDV,GAAyBN,IAAMC,WCN/BU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f2a37353.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  date: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  timerId?: NodeJS.Timer;\n\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <p data-cy=\"time\" className=\"Clock__title\">\n          Current time:\n        </p>\n        <div className=\"Clock__timer\">\n          {this.state.date}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: number,\n  isClockVisible: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    clockName: Math.floor(Math.random() * 24),\n    isClockVisible: true,\n  };\n\n  render() {\n    const {\n      clockName,\n      isClockVisible,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">{`Ð¡lock name is ${clockName}`}</h1>\n        {isClockVisible ? (\n          <Clock\n            name={clockName}\n          />\n        ) : (\n          <div className=\"Show-container\">\n            <h1 className=\"App__title Show-container__title\">\n              The clock is hidden. Do you want to show it?\n            </h1>\n            <div>\n              <button\n                type=\"button\"\n                className=\"App__button App__button-show\"\n                onClick={() => {\n                  this.setState(\n                    { isClockVisible: true },\n                  );\n                }}\n              >\n                Show Clock\n              </button>\n            </div>\n          </div>\n        )}\n\n        <div className=\"Hide-container\">\n          <button\n            type=\"button\"\n            className=\"App__button\"\n            onClick={() => {\n              this.setState(\n                { isClockVisible: false },\n              );\n            }}\n            disabled={!isClockVisible}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"App__button\"\n            onClick={() => {\n              this.setState(\n                { clockName: Math.floor(Math.random() * 24) },\n              );\n            }}\n          >\n            Set random name (0-24)\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}